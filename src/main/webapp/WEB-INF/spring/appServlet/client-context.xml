<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd 
		">
		
		<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.edu.wepet.client.controller" />

		<!-- member 로그인 체크를 위한 빈 설정 -->
	<beans:bean 
		id="memberLoginCheckAdvice" 
		class="com.edu.wepet.aop.MemberLoginCheckAdvice"/>
	
	<aop:config>
		<aop:aspect ref="memberLoginCheckAdvice">
			<aop:pointcut expression="execution(public * com.edu.wepet.client.controller..*(..))" id="memberLoginCheckPointcut"/>
			<aop:around method="sessionCheck" pointcut-ref="memberLoginCheckPointcut"/>
		</aop:aspect>
	</aop:config>	
	
	
	<!-- 관리자와 관련된 글로벌 예외 빈 등록 -->
			<beans:bean
		id="restClientGlobalException" 
		class="com.edu.wepet.aop.RestClientGlobalException"/>
		
	<beans:bean
		id="clientGlobalException" 
		class="com.edu.wepet.aop.ClientGlobalException"/>
	
	
		<!-- ********************************************************************* -->			
				
	<!-- 구글 로그인 관련정보 등록 -->
 	<beans:bean id="googleLogin" class="com.edu.wepet.sns.GoogleLogin">
 	
 		<!-- 1) 인증화면 관련 (하단의 7개가, 모두 인증 받을떄 사용)
				4개가 uri 관련-->
 		<!-- 인증화면 링크 URL : value 값은 고정된 설정값이다.-->
 		<beans:property name="endpoint" value="http://accounts.google.com/o/oauth2/v2/auth" />
 	
 	  	<!-- 구글 클라우드 플랫폼에서 발급받은 클라이언트 아이디  -->
 			<beans:property name="client_id" value="138994600547-nicmjp1861mnhj86lujcfa1r2jsfrhgi.apps.googleusercontent.com"  />
 	  	<!-- 구글 클라우드 플랫폼에서 발급받은 클라이언트 비번 --> 			
 			<beans:property name="client_secret" value="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" />
 			
 		<!-- 리소스 오너가 인증할때, 콜백받을 우리 웹사이트 uri -->
 		<beans:property name="redirect_uri" value="http://localhost:7777/sns/google/callback" />
 		
 		<!-- 콜백 받을 때, 구글이 우리에게 전달할 파라미터의 이름 -->
 		<beans:property name="response_type" value="code"/>
 		
 		<!-- 리소스 오너로부터 어떠한 정보를 수집할지 그 범위 설정 -->
 		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile" />
 
 
	 	<!-- 2) 토큰 요청 관련  (2가지 필요)-->
	 	<beans:property name="token_request_url" value="https://oauth2.googleapis.com/token" />
 		<!-- 모든 sns 사업자가 같은 변수 명을 쓴다. -->
 		<beans:property name="grant_type" value="authorization_code"/>
	 	
	 	
	 	
	 	<!-- 3) 토큰을 통한, 회원정보 요청을 위한 url  -->
	 	<beans:property name="userinfo_url" value="https://www.googleapis.com/oauth2/v1/userinfo"/>
 
 	</beans:bean>
 	
 		<!-- *****************************************  -->
 		
 		<!-- *****************************************  -->
 	<!-- 카카오 로그인 관련정보 등록 -->
 	<beans:bean id="kakaoLogin" class="com.edu.wepet.sns.KakaoLogin">
 	
 		<!-- 1) 인증화면 관련 -->
 		<!-- 인증화면 링크 URL : value 값은 고정된 설정값이다.-->
 		<beans:property name="endpoint" value="https://kauth.kakao.com/oauth/authorize" />
 	
 	  	<!-- 카카오 rest 키  / 시크릿 키는 별도 없음-->
 			<beans:property name="client_id" value="c73041e23a0ca523d6053c48c6ae98b1"  />
 			
 		<!-- 리소스 오너가 인증할때, 콜백받을 우리 웹사이트 uri -->
 		<beans:property name="redirect_uri" value="http://localhost:7777/sns/kakao/callback" />
 		
 		<!-- 콜백 받을 때, 구글이 우리에게 전달할 파라미터의 이름 -->
 		<beans:property name="response_type" value="code"/>
 		
 		<!-- 카카오는 scope 없음 -->
 
	 	<!-- 2) 토큰 요청 관련  (2가지 필요)-->
	 	<beans:property name="token_request_url" value="https://kauth.kakao.com/oauth/token" />
 		<!-- 모든 sns 사업자가 같은 변수 명을 쓴다. -->
 		<beans:property name="grant_type" value="authorization_code"/>
	 	
	 	
	 	<!-- 3) 토큰을 통한, 회원정보 요청을 위한 url  -->
	 	<beans:property name="userinfo_url" value="https://kapi.kakao.com/v2/user/me"/>
 
 	</beans:bean>
 	
 		<!-- *****************************************  -->
 			<!-- *****************************************  -->
 	<!-- naver 로그인 관련정보 등록 -->
 	<beans:bean id="naverLogin" class="com.edu.wepet.sns.NaverLogin">
 	
 		<!-- 1) 인증화면 관련 -->
 		<!-- 인증화면 링크 URL : value 값은 고정된 설정값이다.-->
 		<beans:property name="endpoint" value="https://nid.naver.com/oauth2.0/authorize" />
 	
 	  	<!--네이버 아이디, 시크릿 키-->
 			<beans:property name="client_id" value="x78ufPsnAWplRIs0U3NO"  />
 			<beans:property name="client_secret" value="CMU025Pi49" />
 			
 		<!-- 리소스 오너가 인증할때, 콜백받을 우리 웹사이트 uri -->
 		<beans:property name="redirect_uri" value="http://localhost:7777/sns/naver/callback" />

		<!-- 보안을 위한 임의의 값... (네이버만 있음) -->
 		<beans:property name="state" value="naver_login_by_gini"/>
 		
 		<!-- 콜백 받을 때, 구글이 우리에게 전달할 파라미터의 이름 (3사가 동일)-->
 		<beans:property name="response_type" value="code"/>

 
	 	<!-- 2) 토큰 요청 관련  (2가지 필요)-->
	 	<beans:property name="token_request_url" value="https://nid.naver.com/oauth2.0/token" />
 		<!-- 모든 sns 사업자가 같은 변수 명을 쓴다. -->
 		<beans:property name="grant_type" value="authorization_code"/>

		 	
	 	<!-- 3) 토큰을 통한, 회원정보 요청을 위한 url  -->
	 	<beans:property name="userinfo_url" value="https://openapi.naver.com/v1/nid/me"/>
 
 </beans:bean>
	
</beans:beans>
